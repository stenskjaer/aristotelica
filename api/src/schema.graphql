type Text {
  text_id: ID! 
  created: DateTime!
  modified: DateTime
  authors: [Person!]! @cypher(statement: "MATCH (this)<--(:Attribution)-->(p:Person) RETURN DISTINCT p")
  title: String
  title_addon: String
  date: String
  note: String
  type: [TextType]! @relation(name: "Type", direction: "OUT")
}

type Person {
  id: ID!
  name: String!
  created: String!
  modified: String
  note: String 
}

type TextType {
  id: ID!
  name: String!
}

scalar DateTime

type Query {
  textByTitle(substring: String): [Text] @cypher(statement: "MATCH (t:Text) WHERE lower(t.title) CONTAINS lower($substring) RETURN t")
  textById(id: String!): Text @cypher(statement: "MATCH (t:Text) WHERE t.text_id = $id RETURN t")
}

type Mutation {
  UpdateText(
      text_id: ID!, 
      modified: DateTime,
      title: String,
      title_addon: String,
      note: String,
      date: String,
    ): Text
}